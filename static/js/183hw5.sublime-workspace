{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"stripe",
				"stripe_token〔variable〕"
			],
			[
				"continue",
				"continue_shopping"
			],
			[
				"cart",
				"cart_total"
			],
			[
				"user_ima",
				"user_images"
			],
			[
				"req",
				"requires_signature"
			],
			[
				"v-on",
				"v-on:submit"
			],
			[
				"uplo",
				"upload_file"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/alyehuan/Desktop/web2py/applications/hw/views/default/index.html",
			"settings":
			{
				"buffer_size": 4002,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/alyehuan/Desktop/web2py/applications/hw/models/tables.py",
			"settings":
			{
				"buffer_size": 875,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import tempfile\n\n# Cloud-safe of uuid, so that many cloned servers do not all use the same uuids.\nfrom gluon.utils import web2py_uuid\n\n# Here go your api methods.\n@auth.requires_signature()\ndef add_image():\n\timage_id = db.user_images.insert(\n\t\timage_url = request.vars.image_url,\n\t\tprice = request.vars.price\n\t\t)\n\tusr_img = db.user_images(image_id)\n\treturn response.json(dict(usr_img=usr_img, image_id=image_id))\n\n@auth.requires_signature()\ndef get_users():\n\tusers=[]\n\tcurrent_user = None\n\trows = db().select(db.auth_user.ALL)\n\tfor r in rows:\n\t\t#logger.info(r);\n\t\tt = dict(\n\t\t\tid = r.id,\n\t\t\tfirst_name = r.first_name,\n\t\t\tlast_name = r.last_name\n\t\t)\n\t\tusers.append(t)\n\tlogged_in = auth.user is not None\n\tif logged_in:\n\t\tcurrent_user = auth.user.id\n\treturn response.json(dict(\n\t\tusers=users,\n\t\tlogged_in=logged_in,\n\t\tcurrent_user = current_user\n\t))\n\n#@auth.requires_signature()\ndef get_images():\n\timages=[]\n\tis_same_user = False\n\t# rows = db().select(db.user_images.ALL)\n\trows = db(db.user_images.created_by == request.vars.user_id).select()\n\tif str(auth.user.id) == str(request.vars.user_id):\n\t\tis_same_user = True\n\tfor im in rows:\n\t\ti = dict(\n\t\t\tid = im.created_by,\n\t\t\timage_id = im.id,\n\t\t\timage_url = im.image_url,\n\t\t\tprice = im.price\n\t\t)\n\t\timages.append(i)\n\treturn response.json(dict(user_images=images, is_same_user = is_same_user))\n\n@auth.requires_signature()\ndef edit_price():\n\tlogger.info(request.vars.id)\n\trow = db(db.user_images.id == request.vars.id).select().first()\n\trow.price = request.vars.newprice\n\trow.update_record()\n\treturn response.json(dict(user_image=row))\n\n@auth.requires_signature()\ndef checkout():\n\tlogger.info()\n\ndef purchase():\n    \"\"\"Ajax function called when a customer orders and pays for the cart.\"\"\"\n    if not URL.verify(request, hmac_key=session.hmac_key):\n        raise HTTP(500)\n    # Creates the charge.\n    import stripe\n    import json\n    # Your secret key.\n    stripe.api_key = myconf.get('stripe.private_key')\n    token = json.loads(request.vars.transaction_token)\n    amount = float(request.vars.amount)\n    try:\n        charge = stripe.Charge.create(\n            amount=int(amount * 100),\n            currency=\"usd\",\n            source=token['id'],\n            description=\"Purchase\",\n        )\n    except stripe.error.CardError as e:\n        logger.info(\"The card has been declined.\")\n        logger.info(\"%r\" % traceback.format_exc())\n        return \"nok\"\n    return \"ok\"\n",
			"file": "/Users/alyehuan/Desktop/web2py/applications/hw/controllers/api.py",
			"file_size": 2357,
			"file_write_time": 131726193477869334,
			"settings":
			{
				"buffer_size": 2416,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/alyehuan/Desktop/web2py/applications/hw/static/js/default_index.js",
			"settings":
			{
				"buffer_size": 8716,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/alyehuan/Desktop/web2py/applications/hw/private/appconfig.ini",
			"settings":
			{
				"buffer_size": 654,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/alyehuan/Desktop/web2py/applications/hw",
		"/Users/alyehuan/Desktop/web2py/applications/hw/models",
		"/Users/alyehuan/Desktop/web2py/applications/hw/private",
		"/Users/alyehuan/Desktop/web2py/applications/hw/static"
	],
	"file_history":
	[
		"/Users/alyehuan/Desktop/web2py/applications/hw/models/tables.py",
		"/Users/alyehuan/Library/Application Support/Sublime Text 3/Packages/User/Terminal.sublime-settings",
		"/Users/alyehuan/Library/Application Support/Sublime Text 3/Packages/Terminal/Terminal.sublime-settings"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"stripe",
			"v-on:click=\"pay\"",
			"checkout",
			"logger.info"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/alyehuan/Desktop/web2py/applications/hw/views/default/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4002,
						"regions":
						{
						},
						"selection":
						[
							[
								1485,
								1485
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1481,
										1484
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										1444,
										1447
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 614.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/alyehuan/Desktop/web2py/applications/hw/models/tables.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 875,
						"regions":
						{
						},
						"selection":
						[
							[
								777,
								777
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										776,
										777
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										775,
										776
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/alyehuan/Desktop/web2py/applications/hw/controllers/api.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2416,
						"regions":
						{
						},
						"selection":
						[
							[
								1635,
								1635
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1634,
										1635
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1633,
										1634
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/alyehuan/Desktop/web2py/applications/hw/static/js/default_index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8716,
						"regions":
						{
						},
						"selection":
						[
							[
								5690,
								5690
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6329,
										6330
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										5465,
										5466
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 406.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/alyehuan/Desktop/web2py/applications/hw/private/appconfig.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 654,
						"regions":
						{
						},
						"selection":
						[
							[
								654,
								654
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 64.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "183hw5.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 137.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
